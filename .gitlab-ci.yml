stages:
  - build

.build_template:
  stage: build
  image:
    # Use CERN version of the Kaniko image
    # name: gitlab-registry.cern.ch/ci-tools/docker-image-builder
    name: gcr.io/kaniko-project/executor
    entrypoint: [""]
  variables:
    CONTEXT: .
    DOCKERFILE: <Dockerfile path>
    VERSION: ${CI_COMMIT_REF_SLUG}
    OSTAG: <Tag suffix corresponding to version>
    # Use single quotes to escape colon
    # DESTINATION: '${CI_REGISTRY_IMAGE}/${IMAGE}:${VERSION}-${OSTAG}'
    DESTINATION: 'ghcr.io/madbaron/${IMAGE}:${VERSION}-${OSTAG}'
  before_script:
    # Prepare Kaniko configuration file
    - echo "{\"auths\":{\"ghcr.io\":{\"auth\":\"$(-n $CI_REGISTRY_USER:$CI_REGISTRY_PASSWORD | base64 -w0)\"}}}" > /kaniko/.docker/config.json
  script:
    #- printenv
    - echo ${CI_REGISTRY_USER} ${CI_REGISTRY_PASSWORD} ${DESTINATION}
    # Build and push the image from the given Dockerfile
    # See https://docs.gitlab.com/ee/ci/variables/predefined_variables.html#variables-reference for available variables
    - /kaniko/executor --context ${CI_PROJECT_DIR}/${CONTEXT}
      --dockerfile ${DOCKERFILE}
      --build-arg REPOSITORY=${CI_REGISTRY_IMAGE}
      --build-arg VERSION=${VERSION}
      --destination ${DESTINATION}
    - echo /kaniko/executor --context ${CI_PROJECT_DIR}/${CONTEXT}
      --dockerfile ${DOCKERFILE}
      --build-arg REPOSITORY=${CI_REGISTRY_IMAGE}
      --build-arg VERSION=${VERSION}
      --destination ${DESTINATION}
  # only:
  #   # Only build if the generating files change
  #   changes:
  #     - ${DOCKERFILE}

build-image:
  extends: .build_template
  variables:
    IMAGE: ci-test-hello
  parallel:
    matrix:
      - DOCKERFILE: Dockerfile-helloworld
        OSTAG: alma9

